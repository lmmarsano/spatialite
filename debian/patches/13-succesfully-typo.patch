Description: Fix 'succesfully' typo, replace with 'successfully'.
Author: Bas Couwenberg <sebastic@xs4all.nl>
Forwarded: https://groups.google.com/d/msg/spatialite-users/yvME7fp-7EI/OiRiDJioEjEJ
Applied-Upstream: https://www.gaia-gis.it/fossil/libspatialite/vinfo/497f33bd73

--- a/src/gaiageo/gg_xml.c
+++ b/src/gaiageo/gg_xml.c
@@ -2942,7 +2942,7 @@ gaiaIsCompressedXmlBlob (const unsigned
 GAIAGEO_DECLARE int
 gaiaIsSchemaValidatedXmlBlob (const unsigned char *blob, int blob_size)
 {
-/* Checks if a valid XmlBLOB buffer has succesfully passed a formal Schema validation or not */
+/* Checks if a valid XmlBLOB buffer has successfully passed a formal Schema validation or not */
     int validated = 0;
     unsigned char flag;
 
--- a/src/headers/spatialite/gaiaaux.h
+++ b/src/headers/spatialite/gaiaaux.h
@@ -285,7 +285,7 @@ extern "C"
  \param sqlite handle of the current DB connection
  \param sqllog_pk the Primary Key identifying the corresponding Log event.
  \n expected to be exactely the same returned by the most recent call to gaiaInsertIntoSqlLog()
- \param success expected to be TRUE if the SQL statement was succesfully executed.
+ \param success expected to be TRUE if the SQL statement was successfully executed.
  \param errMsg expected to be the error message returned by SQLite on failure, NULL on success.
 
  \sa gaiaInsertIntoSqlLog
--- a/src/headers/spatialite/gg_xml.h
+++ b/src/headers/spatialite/gg_xml.h
@@ -133,7 +133,7 @@ extern "C"
  \param xml_len lenght of the XML document (in bytes).
  \param compressed if TRUE the returned XmlBLOB will be zip-compressed.
  \param schemaURI if not NULL the XML document will be assumed to be valid
-  only if it succesfully passes a formal Schema valitadion.
+  only if it successfully passes a formal Schema valitadion.
  \param result on completion will containt a pointer to XmlBLOB:
  NULL on failure.
  \param size on completion this variable will contain the XmlBLOB's size (in bytes)
@@ -342,7 +342,7 @@ extern "C"
 						 int *out_size);
 
 /**
- Checks if a valid XmlBLOB buffer has succesfully passed a formal Schema validation or not
+ Checks if a valid XmlBLOB buffer has successfully passed a formal Schema validation or not
 
  \param blob pointer to the XmlBLOB buffer.
  \param size XmlBLOB's size (in bytes).
--- a/src/shapefiles/validator.c
+++ b/src/shapefiles/validator.c
@@ -2300,7 +2300,7 @@ sanitize_geometry_column_common (const v
     else if (report->n_repaired > 0)
       {
 	  fprintf (out,
-		   "\t\t\t<tr><td colspan=\"2\" class=\"ok\">This layer has been succesfully repaired and is now completely valid;<br>");
+		   "\t\t\t<tr><td colspan=\"2\" class=\"ok\">This layer has been successfully repaired and is now completely valid;<br>");
 	  fprintf (out,
 		   "doesn't require any further corrective action.</td></tr>\n");
       }
@@ -2632,7 +2632,7 @@ sanitize_all_geometry_columns_common (co
 		else if (n_discarded == 0 && n_failures == 0)
 		  {
 		      p_msg =
-			  "NONE: this layer has been succesfully sanitized and is now fully valid";
+			  "NONE: this layer has been successfully sanitized and is now fully valid";
 		      cls_msg = "ok";
 		  }
 		else if (n_discarded == 0 && n_failures > 0)
--- a/src/spatialite/spatialite.c
+++ b/src/spatialite/spatialite.c
@@ -26340,7 +26340,7 @@ load_dxf (sqlite3 * db_handle, struct sp
 	  spatialite_e ("Unable to parse: %s\n", filename);
 	  goto stop_dxf;
       }
-    spatialite_e ("\n*** DXF file succesfully loaded\n");
+    spatialite_e ("\n*** DXF file successfully loaded\n");
     ret = 1;
 
   stop_dxf:
@@ -28817,7 +28817,7 @@ fnct_XB_Create (sqlite3_context * contex
 /
 / - the XMLdocument should be "well formed"
 / - if *compressed* is TRUE (default) the XmlBlob would be zipped
-/ - if *SchemaURI* in not NULL then only XMLdocuments succesfully
+/ - if *SchemaURI* in not NULL then only XMLdocuments successfully
 /   passing a formal Schema Validation will be accepted as valid
 / - if *InternalSchamaURI* is defined (any numeric value) then an
 /   attempt will be made in order to identify a SchemaURI defined
